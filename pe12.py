# 12

# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be
# 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?


def add_fact(n):
    """
    :param n: term number (index)
    :return: nth triangular number (summed factorial)
    """
    return int((n**2 + n)/2)


def find_div(n):
    """
    :param n:
    :return:
    """
    # start total at 2 since each number is divisible by 1 and itself
    total = 2
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            total += 2
            # print(i)
    if n**0.5 == int(n**0.5):
        total -= 1
    # print('\n')
    return total


# could start m at higher value
m = 1
while find_div(add_fact(m)) <= 500:
    m += 1

print(add_fact(m))
